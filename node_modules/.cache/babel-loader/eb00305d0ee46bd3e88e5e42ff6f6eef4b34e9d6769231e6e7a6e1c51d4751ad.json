{"ast":null,"code":"export default class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n  }\n  _checkResponse(res) {\n    if (res.status === 200) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  addCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  editUserInfo(_ref3) {\n    let {\n      name,\n      profession\n    } = _ref3;\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: profession\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  addCardLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCardLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n  editAvatarUser(_ref4) {\n    let {\n      avatar\n    } = _ref4;\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n}\nexport const api = new Api({\n  url: \"https://nomoreparties.co/v1/cohort-68\",\n  headers: {\n    authorization: \"39748c5f-0d2d-4234-9c59-98ecf4137a9d\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","_ref","url","headers","_url","_headers","_checkResponse","res","status","json","Promise","reject","getCards","fetch","then","addCard","_ref2","name","link","method","body","JSON","stringify","getUserInfo","editUserInfo","_ref3","profession","about","deleteCard","cardId","addCardLike","deleteCardLike","editAvatarUser","_ref4","avatar","api","authorization"],"sources":["/Users/sasha/mesto-react/src/utils/Api.js"],"sourcesContent":["export default class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.status === 200) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, { headers: this._headers }).then((res) =>\n      this._checkResponse(res)\n    );\n  }\n\n  addCard({ name, link }) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, { headers: this._headers }).then(\n      (res) => this._checkResponse(res)\n    );\n  }\n\n  editUserInfo({ name, profession }) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: profession,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  addCardLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  deleteCardLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  editAvatarUser({ avatar }) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n}\n\nexport const api = new Api({\n  url: \"https://nomoreparties.co/v1/cohort-68\",\n  headers: {\n    authorization: \"39748c5f-0d2d-4234-9c59-98ecf4137a9d\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}